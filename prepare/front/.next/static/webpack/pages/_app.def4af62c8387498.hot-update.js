"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ADD_COMMENT_FAILURE\": function() { return /* binding */ ADD_COMMENT_FAILURE; },\n/* harmony export */   \"ADD_COMMENT_REQUEST\": function() { return /* binding */ ADD_COMMENT_REQUEST; },\n/* harmony export */   \"ADD_COMMENT_SUCCESS\": function() { return /* binding */ ADD_COMMENT_SUCCESS; },\n/* harmony export */   \"ADD_POST_FAILURE\": function() { return /* binding */ ADD_POST_FAILURE; },\n/* harmony export */   \"ADD_POST_REQUEST\": function() { return /* binding */ ADD_POST_REQUEST; },\n/* harmony export */   \"ADD_POST_SUCCESS\": function() { return /* binding */ ADD_POST_SUCCESS; },\n/* harmony export */   \"addCommentRequestAction\": function() { return /* binding */ addCommentRequestAction; },\n/* harmony export */   \"addPostRequestAction\": function() { return /* binding */ addPostRequestAction; },\n/* harmony export */   \"initialState\": function() { return /* binding */ initialState; }\n/* harmony export */ });\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_0__);\n\nconst initialState = {\n    mainPosts: [\n        {\n            // post1의 id\n            id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n            // post1의 user\n            User: {\n                id: 1,\n                nickname: \"채현이\"\n            },\n            // post1의 content\n            content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n            Images: [\n                {\n                    src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n                },\n                {\n                    src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n                },\n                {\n                    src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n                }\n            ],\n            // post1의 comment\n            Comments: [\n                {\n                    User: {\n                        nickname: \"태희\"\n                    },\n                    content: \"사보 그래도 선방했다.\"\n                },\n                {\n                    User: {\n                        nickname: \"진아\"\n                    },\n                    content: \"감기 조심해~\"\n                }\n            ]\n        }\n    ],\n    // mainPost array 끝\n    // imagePath: 이미지 업로드할 때 이미지 경로들 저장하는 변수\n    imagePaths: [],\n    // postAdded: 게시글 추가 완료 여부\n    postAdded: false,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null\n};\n// 액션 이름을 상수로 빼줌.\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nconst ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nconst ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nconst ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nconst addPostRequestAction = (data)=>({\n        type: ADD_POST_REQUEST,\n        data\n    });\nconst addCommentRequestAction = (data)=>({\n        type: ADD_COMMENT_REQUEST,\n        data\n    });\nconst dummyPost = (data)=>({\n        id: 2,\n        content: data,\n        User: {\n            id: 1,\n            nickname: \"민정\"\n        },\n        Images: [],\n        Comments: []\n    });\nconst dummyComment = (data)=>({\n        id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n        content: data,\n        User: {\n            id: 1,\n            nickname: \"채채\"\n        }\n    });\nconst reducer = function() {\n    let state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialState, action = arguments.length > 1 ? arguments[1] : void 0;\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return {\n                ...state,\n                addPostLoading: true,\n                addPostDone: false,\n                addPostError: null\n            };\n        case ADD_POST_SUCCESS:\n            return {\n                ...state,\n                mainPosts: [\n                    dummyPost(action.data),\n                    ...state.mainPosts\n                ],\n                addPostLoading: false,\n                addPostDone: true\n            };\n        case ADD_POST_FAILURE:\n            return {\n                ...state,\n                addPostLoading: false,\n                addPostError: action.error\n            };\n        case ADD_COMMENT_REQUEST:\n            return {\n                ...state,\n                addCommentLoading: true,\n                addCommentDone: false,\n                addCommentError: null\n            };\n        case ADD_COMMENT_SUCCESS:\n            {\n                const postIndex = state.mainPosts.findIndex((v)=>v.id === action.data.postId);\n                const post = {\n                    ...state.mainPosts[postIndex]\n                };\n                post.Comments = [\n                    dummyComment(action.data.content),\n                    ...post.Comments\n                ];\n                const mainPosts = [\n                    ...state.mainPosts\n                ];\n                mainPosts[postIndex] = post;\n                return {\n                    ...state,\n                    mainPosts,\n                    addCommentLoading: false,\n                    addCommentDone: true\n                };\n            // 넘겨준 postid를 통해 postIndex를 찾음.\n            // const postIndex = state.mainPosts.findIndex(\n            //   (v) => v.id === action.state.postId,\n            // );\n            // // postIndex로 새로운 post 객체 생성함. post 내용은 전부 들어있음.\n            // const post = state.mainPosts[postIndex];\n            // // 새로운 post객체의 comment를 수정해줌. (불변성 지키기!!!!) 원래 comments를 전개 구문으로 펼쳐줌\n            // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n            // // mainPosts 객체를 하나 복사해줌 (불변성)\n            // const mainPosts = [...state.mainPosts];\n            // // mainPosts의 postIndex 위치에 새로 만든 객체를 넣어줌\n            // mainPosts[postIndex] = post;\n            // return {\n            //   ...state,\n            //   mainPosts,\n            //   addCommentLoading: false,\n            //   addCommentDone: true,\n            // };\n            }\n        case ADD_COMMENT_FAILURE:\n            return {\n                ...state,\n                addCommentLoading: false,\n                addCommentError: action.error\n            };\n        default:\n            return state;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZWR1Y2Vycy9wb3N0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQThCO0FBRXZCLE1BQU1DLGVBQWU7SUFDMUJDLFdBQVc7UUFDVDtZQUNFLFlBQVk7WUFDWkMsSUFBSUgsdURBQWdCO1lBQ3BCLGNBQWM7WUFDZEssTUFBTTtnQkFDSkYsSUFBSTtnQkFDSkcsVUFBVTtZQUNaO1lBQ0EsaUJBQWlCO1lBQ2pCQyxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ047b0JBQ0VDLEtBQUs7Z0JBQ1A7Z0JBQ0E7b0JBQ0VBLEtBQUs7Z0JBQ1A7Z0JBQ0E7b0JBQ0VBLEtBQUs7Z0JBQ1A7YUFDRDtZQUNELGlCQUFpQjtZQUNqQkMsVUFBVTtnQkFDUjtvQkFDRUwsTUFBTTt3QkFDSkMsVUFBVTtvQkFDWjtvQkFDQUMsU0FBUztnQkFDWDtnQkFDQTtvQkFDRUYsTUFBTTt3QkFDSkMsVUFBVTtvQkFDWjtvQkFDQUMsU0FBUztnQkFDWDthQUNEO1FBQ0g7S0FDRDtJQUNELG1CQUFtQjtJQUNuQix3Q0FBd0M7SUFDeENJLFlBQVksRUFBRTtJQUNkLDBCQUEwQjtJQUMxQkMsV0FBVyxLQUFLO0lBQ2hCQyxnQkFBZ0IsS0FBSztJQUNyQkMsYUFBYSxLQUFLO0lBQ2xCQyxjQUFjLElBQUk7SUFDbEJDLG1CQUFtQixLQUFLO0lBQ3hCQyxnQkFBZ0IsS0FBSztJQUNyQkMsaUJBQWlCLElBQUk7QUFDdkIsRUFBRTtBQUVGLGlCQUFpQjtBQUNWLE1BQU1DLG1CQUFtQixtQkFBbUI7QUFDNUMsTUFBTUMsbUJBQW1CLG1CQUFtQjtBQUM1QyxNQUFNQyxtQkFBbUIsbUJBQW1CO0FBRTVDLE1BQU1DLHNCQUFzQixzQkFBc0I7QUFDbEQsTUFBTUMsc0JBQXNCLHNCQUFzQjtBQUNsRCxNQUFNQyxzQkFBc0Isc0JBQXNCO0FBRWxELE1BQU1DLHVCQUF1QixDQUFDQyxPQUFVO1FBQzdDQyxNQUFNUjtRQUNOTztJQUNGLEdBQUc7QUFFSSxNQUFNRSwwQkFBMEIsQ0FBQ0YsT0FBVTtRQUNoREMsTUFBTUw7UUFDTkk7SUFDRixHQUFHO0FBRUgsTUFBTUcsWUFBWSxDQUFDSCxPQUFVO1FBQzNCdkIsSUFBSTtRQUNKSSxTQUFTbUI7UUFDVHJCLE1BQU07WUFDSkYsSUFBSTtZQUNKRyxVQUFVO1FBQ1o7UUFDQUUsUUFBUSxFQUFFO1FBQ1ZFLFVBQVUsRUFBRTtJQUNkO0FBRUEsTUFBTW9CLGVBQWUsQ0FBQ0osT0FBVTtRQUM5QnZCLElBQUlILHVEQUFnQjtRQUNwQk8sU0FBU21CO1FBQ1RyQixNQUFNO1lBQ0pGLElBQUk7WUFDSkcsVUFBVTtRQUNaO0lBQ0Y7QUFFQSxNQUFNeUIsVUFBVSxXQUFrQztRQUFqQ0MseUVBQVEvQixjQUFjZ0M7SUFDckMsT0FBUUEsT0FBT04sSUFBSTtRQUNqQixLQUFLUjtZQUNILE9BQU87Z0JBQ0wsR0FBR2EsS0FBSztnQkFDUm5CLGdCQUFnQixJQUFJO2dCQUNwQkMsYUFBYSxLQUFLO2dCQUNsQkMsY0FBYyxJQUFJO1lBQ3BCO1FBQ0YsS0FBS0s7WUFDSCxPQUFPO2dCQUNMLEdBQUdZLEtBQUs7Z0JBQ1I5QixXQUFXO29CQUFDMkIsVUFBVUksT0FBT1AsSUFBSTt1QkFBTU0sTUFBTTlCLFNBQVM7aUJBQUM7Z0JBQ3ZEVyxnQkFBZ0IsS0FBSztnQkFDckJDLGFBQWEsSUFBSTtZQUNuQjtRQUNGLEtBQUtPO1lBQ0gsT0FBTztnQkFDTCxHQUFHVyxLQUFLO2dCQUNSbkIsZ0JBQWdCLEtBQUs7Z0JBQ3JCRSxjQUFja0IsT0FBT0MsS0FBSztZQUM1QjtRQUNGLEtBQUtaO1lBQ0gsT0FBTztnQkFDTCxHQUFHVSxLQUFLO2dCQUNSaEIsbUJBQW1CLElBQUk7Z0JBQ3ZCQyxnQkFBZ0IsS0FBSztnQkFDckJDLGlCQUFpQixJQUFJO1lBQ3ZCO1FBQ0YsS0FBS0s7WUFBcUI7Z0JBQ3hCLE1BQU1ZLFlBQVlILE1BQU05QixTQUFTLENBQUNrQyxTQUFTLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRWxDLEVBQUUsS0FBSzhCLE9BQU9QLElBQUksQ0FBQ1ksTUFBTTtnQkFDOUUsTUFBTUMsT0FBTztvQkFBRSxHQUFHUCxNQUFNOUIsU0FBUyxDQUFDaUMsVUFBVTtnQkFBQztnQkFDN0NJLEtBQUs3QixRQUFRLEdBQUc7b0JBQUNvQixhQUFhRyxPQUFPUCxJQUFJLENBQUNuQixPQUFPO3VCQUFNZ0MsS0FBSzdCLFFBQVE7aUJBQUM7Z0JBQ3JFLE1BQU1SLFlBQVk7dUJBQUk4QixNQUFNOUIsU0FBUztpQkFBQztnQkFDdENBLFNBQVMsQ0FBQ2lDLFVBQVUsR0FBR0k7Z0JBQ3ZCLE9BQU87b0JBQ0wsR0FBR1AsS0FBSztvQkFDUjlCO29CQUNBYyxtQkFBbUIsS0FBSztvQkFDeEJDLGdCQUFnQixJQUFJO2dCQUN0QjtZQUNBLGdDQUFnQztZQUNoQywrQ0FBK0M7WUFDL0MseUNBQXlDO1lBQ3pDLEtBQUs7WUFDTCxtREFBbUQ7WUFDbkQsMkNBQTJDO1lBQzNDLHVFQUF1RTtZQUN2RSx5RUFBeUU7WUFDekUsaUNBQWlDO1lBQ2pDLDBDQUEwQztZQUMxQyw0Q0FBNEM7WUFDNUMsK0JBQStCO1lBQy9CLFdBQVc7WUFDWCxjQUFjO1lBQ2QsZUFBZTtZQUNmLDhCQUE4QjtZQUM5QiwwQkFBMEI7WUFDMUIsS0FBSztZQUNQO1FBQ0EsS0FBS087WUFDSCxPQUFPO2dCQUNMLEdBQUdRLEtBQUs7Z0JBQ1JoQixtQkFBbUIsS0FBSztnQkFDeEJFLGlCQUFpQmUsT0FBT0MsS0FBSztZQUMvQjtRQUNGO1lBQ0UsT0FBT0Y7SUFDWDtBQUNGO0FBRUEsK0RBQWVELE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcmVkdWNlcnMvcG9zdC5qcz82ZmY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzaG9ydElkIGZyb20gJ3Nob3J0aWQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcclxuICBtYWluUG9zdHM6IFtcclxuICAgIHtcclxuICAgICAgLy8gcG9zdDHsnZggaWRcclxuICAgICAgaWQ6IHNob3J0SWQuZ2VuZXJhdGUoKSxcclxuICAgICAgLy8gcG9zdDHsnZggdXNlclxyXG4gICAgICBVc2VyOiB7XHJcbiAgICAgICAgaWQ6IDEsXHJcbiAgICAgICAgbmlja25hbWU6ICfssYTtmITsnbQnLFxyXG4gICAgICB9LFxyXG4gICAgICAvLyBwb3N0MeydmCBjb250ZW50XHJcbiAgICAgIGNvbnRlbnQ6ICfssqsg67KI7Ke4IOqyjOyLnOq4gCAj7ZW07Iuc7YOc6re4ICPsnbXsiqTtlITroIjsiqQnLFxyXG4gICAgICBJbWFnZXM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBzcmM6ICdodHRwczovL2Jvb2t0aHVtYi1waGluZi5wc3RhdGljLm5ldC9jb3Zlci8xMzcvOTk1LzEzNzk5NTg1LmpwZz91ZGF0ZT0yMDE4MDcyNicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBzcmM6ICdodHRwczovL2dpbWcuZ2lsYnV0LmNvLmtyL2Jvb2svQk4wMDE5NTgvcm5fdmlld19CTjAwMTk1OC5qcGcnLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgc3JjOiAnaHR0cHM6Ly9naW1nLmdpbGJ1dC5jby5rci9ib29rL0JOMDAxOTk4L3JuX3ZpZXdfQk4wMDE5OTguanBnJyxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgICAvLyBwb3N0MeydmCBjb21tZW50XHJcbiAgICAgIENvbW1lbnRzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgVXNlcjoge1xyXG4gICAgICAgICAgICBuaWNrbmFtZTogJ+2DnO2drCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgY29udGVudDogJ+yCrOuztCDqt7jrnpjrj4Qg7ISg67Cp7ZaI64ukLicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBVc2VyOiB7XHJcbiAgICAgICAgICAgIG5pY2tuYW1lOiAn7KeE7JWEJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBjb250ZW50OiAn6rCQ6riwIOyhsOyLrO2VtH4nLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIF0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbiAgLy8gbWFpblBvc3QgYXJyYXkg64GdXHJcbiAgLy8gaW1hZ2VQYXRoOiDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZWgIOuVjCDsnbTrr7jsp4Ag6rK966Gc65OkIOyggOyepe2VmOuKlCDrs4DsiJhcclxuICBpbWFnZVBhdGhzOiBbXSxcclxuICAvLyBwb3N0QWRkZWQ6IOqyjOyLnOq4gCDstpTqsIAg7JmE66OMIOyXrOu2gFxyXG4gIHBvc3RBZGRlZDogZmFsc2UsXHJcbiAgYWRkUG9zdExvYWRpbmc6IGZhbHNlLFxyXG4gIGFkZFBvc3REb25lOiBmYWxzZSxcclxuICBhZGRQb3N0RXJyb3I6IG51bGwsXHJcbiAgYWRkQ29tbWVudExvYWRpbmc6IGZhbHNlLFxyXG4gIGFkZENvbW1lbnREb25lOiBmYWxzZSxcclxuICBhZGRDb21tZW50RXJyb3I6IG51bGwsXHJcbn07XHJcblxyXG4vLyDslaHshZgg7J2066aE7J2EIOyDgeyImOuhnCDrubzspIwuXHJcbmV4cG9ydCBjb25zdCBBRERfUE9TVF9SRVFVRVNUID0gJ0FERF9QT1NUX1JFUVVFU1QnO1xyXG5leHBvcnQgY29uc3QgQUREX1BPU1RfU1VDQ0VTUyA9ICdBRERfUE9TVF9TVUNDRVNTJztcclxuZXhwb3J0IGNvbnN0IEFERF9QT1NUX0ZBSUxVUkUgPSAnQUREX1BPU1RfRkFJTFVSRSc7XHJcblxyXG5leHBvcnQgY29uc3QgQUREX0NPTU1FTlRfUkVRVUVTVCA9ICdBRERfQ09NTUVOVF9SRVFVRVNUJztcclxuZXhwb3J0IGNvbnN0IEFERF9DT01NRU5UX1NVQ0NFU1MgPSAnQUREX0NPTU1FTlRfU1VDQ0VTUyc7XHJcbmV4cG9ydCBjb25zdCBBRERfQ09NTUVOVF9GQUlMVVJFID0gJ0FERF9DT01NRU5UX0ZBSUxVUkUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZFBvc3RSZXF1ZXN0QWN0aW9uID0gKGRhdGEpID0+ICh7XHJcbiAgdHlwZTogQUREX1BPU1RfUkVRVUVTVCxcclxuICBkYXRhLFxyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCBhZGRDb21tZW50UmVxdWVzdEFjdGlvbiA9IChkYXRhKSA9PiAoe1xyXG4gIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgZGF0YSxcclxufSk7XHJcblxyXG5jb25zdCBkdW1teVBvc3QgPSAoZGF0YSkgPT4gKHtcclxuICBpZDogMixcclxuICBjb250ZW50OiBkYXRhLFxyXG4gIFVzZXI6IHtcclxuICAgIGlkOiAxLFxyXG4gICAgbmlja25hbWU6ICfrr7zsoJUnLFxyXG4gIH0sXHJcbiAgSW1hZ2VzOiBbXSxcclxuICBDb21tZW50czogW10sXHJcbn0pO1xyXG5cclxuY29uc3QgZHVtbXlDb21tZW50ID0gKGRhdGEpID0+ICh7XHJcbiAgaWQ6IHNob3J0SWQuZ2VuZXJhdGUoKSxcclxuICBjb250ZW50OiBkYXRhLFxyXG4gIFVzZXI6IHtcclxuICAgIGlkOiAxLFxyXG4gICAgbmlja25hbWU6ICfssYTssYQnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgcmVkdWNlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG4gICAgY2FzZSBBRERfUE9TVF9SRVFVRVNUOlxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIGFkZFBvc3RMb2FkaW5nOiB0cnVlLFxyXG4gICAgICAgIGFkZFBvc3REb25lOiBmYWxzZSxcclxuICAgICAgICBhZGRQb3N0RXJyb3I6IG51bGwsXHJcbiAgICAgIH07XHJcbiAgICBjYXNlIEFERF9QT1NUX1NVQ0NFU1M6XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgbWFpblBvc3RzOiBbZHVtbXlQb3N0KGFjdGlvbi5kYXRhKSwgLi4uc3RhdGUubWFpblBvc3RzXSxcclxuICAgICAgICBhZGRQb3N0TG9hZGluZzogZmFsc2UsXHJcbiAgICAgICAgYWRkUG9zdERvbmU6IHRydWUsXHJcbiAgICAgIH07XHJcbiAgICBjYXNlIEFERF9QT1NUX0ZBSUxVUkU6XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgYWRkUG9zdExvYWRpbmc6IGZhbHNlLFxyXG4gICAgICAgIGFkZFBvc3RFcnJvcjogYWN0aW9uLmVycm9yLFxyXG4gICAgICB9O1xyXG4gICAgY2FzZSBBRERfQ09NTUVOVF9SRVFVRVNUOlxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIGFkZENvbW1lbnRMb2FkaW5nOiB0cnVlLFxyXG4gICAgICAgIGFkZENvbW1lbnREb25lOiBmYWxzZSxcclxuICAgICAgICBhZGRDb21tZW50RXJyb3I6IG51bGwsXHJcbiAgICAgIH07XHJcbiAgICBjYXNlIEFERF9DT01NRU5UX1NVQ0NFU1M6IHtcclxuICAgICAgY29uc3QgcG9zdEluZGV4ID0gc3RhdGUubWFpblBvc3RzLmZpbmRJbmRleCgodikgPT4gdi5pZCA9PT0gYWN0aW9uLmRhdGEucG9zdElkKTtcclxuICAgICAgY29uc3QgcG9zdCA9IHsgLi4uc3RhdGUubWFpblBvc3RzW3Bvc3RJbmRleF0gfTtcclxuICAgICAgcG9zdC5Db21tZW50cyA9IFtkdW1teUNvbW1lbnQoYWN0aW9uLmRhdGEuY29udGVudCksIC4uLnBvc3QuQ29tbWVudHNdO1xyXG4gICAgICBjb25zdCBtYWluUG9zdHMgPSBbLi4uc3RhdGUubWFpblBvc3RzXTtcclxuICAgICAgbWFpblBvc3RzW3Bvc3RJbmRleF0gPSBwb3N0O1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIG1haW5Qb3N0cyxcclxuICAgICAgICBhZGRDb21tZW50TG9hZGluZzogZmFsc2UsXHJcbiAgICAgICAgYWRkQ29tbWVudERvbmU6IHRydWUsXHJcbiAgICAgIH07XHJcbiAgICAgIC8vIOuEmOqyqOykgCBwb3N0aWTrpbwg7Ya17ZW0IHBvc3RJbmRleOulvCDssL7snYwuXHJcbiAgICAgIC8vIGNvbnN0IHBvc3RJbmRleCA9IHN0YXRlLm1haW5Qb3N0cy5maW5kSW5kZXgoXHJcbiAgICAgIC8vICAgKHYpID0+IHYuaWQgPT09IGFjdGlvbi5zdGF0ZS5wb3N0SWQsXHJcbiAgICAgIC8vICk7XHJcbiAgICAgIC8vIC8vIHBvc3RJbmRleOuhnCDsg4jroZzsmrQgcG9zdCDqsJ3ssrQg7IOd7ISx7ZWoLiBwb3N0IOuCtOyaqeydgCDsoITrtoAg65Ok7Ja07J6I7J2MLlxyXG4gICAgICAvLyBjb25zdCBwb3N0ID0gc3RhdGUubWFpblBvc3RzW3Bvc3RJbmRleF07XHJcbiAgICAgIC8vIC8vIOyDiOuhnOyatCBwb3N06rCd7LK07J2YIGNvbW1lbnTrpbwg7IiY7KCV7ZW07KSMLiAo67aI67OA7ISxIOyngO2CpOq4sCEhISEpIOybkOuemCBjb21tZW50c+ulvCDsoITqsJwg6rWs66y47Jy866GcIO2OvOyzkOykjFxyXG4gICAgICAvLyBwb3N0LkNvbW1lbnRzID0gW2R1bW15Q29tbWVudChhY3Rpb24uZGF0YS5jb250ZW50KSwgLi4ucG9zdC5Db21tZW50c107XHJcbiAgICAgIC8vIC8vIG1haW5Qb3N0cyDqsJ3ssrTrpbwg7ZWY64KYIOuzteyCrO2VtOykjCAo67aI67OA7ISxKVxyXG4gICAgICAvLyBjb25zdCBtYWluUG9zdHMgPSBbLi4uc3RhdGUubWFpblBvc3RzXTtcclxuICAgICAgLy8gLy8gbWFpblBvc3Rz7J2YIHBvc3RJbmRleCDsnITsuZjsl5Ag7IOI66GcIOunjOuToCDqsJ3ssrTrpbwg64Sj7Ja07KSMXHJcbiAgICAgIC8vIG1haW5Qb3N0c1twb3N0SW5kZXhdID0gcG9zdDtcclxuICAgICAgLy8gcmV0dXJuIHtcclxuICAgICAgLy8gICAuLi5zdGF0ZSxcclxuICAgICAgLy8gICBtYWluUG9zdHMsXHJcbiAgICAgIC8vICAgYWRkQ29tbWVudExvYWRpbmc6IGZhbHNlLFxyXG4gICAgICAvLyAgIGFkZENvbW1lbnREb25lOiB0cnVlLFxyXG4gICAgICAvLyB9O1xyXG4gICAgfVxyXG4gICAgY2FzZSBBRERfQ09NTUVOVF9GQUlMVVJFOlxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIGFkZENvbW1lbnRMb2FkaW5nOiBmYWxzZSxcclxuICAgICAgICBhZGRDb21tZW50RXJyb3I6IGFjdGlvbi5lcnJvcixcclxuICAgICAgfTtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldHVybiBzdGF0ZTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByZWR1Y2VyO1xyXG4iXSwibmFtZXMiOlsic2hvcnRJZCIsImluaXRpYWxTdGF0ZSIsIm1haW5Qb3N0cyIsImlkIiwiZ2VuZXJhdGUiLCJVc2VyIiwibmlja25hbWUiLCJjb250ZW50IiwiSW1hZ2VzIiwic3JjIiwiQ29tbWVudHMiLCJpbWFnZVBhdGhzIiwicG9zdEFkZGVkIiwiYWRkUG9zdExvYWRpbmciLCJhZGRQb3N0RG9uZSIsImFkZFBvc3RFcnJvciIsImFkZENvbW1lbnRMb2FkaW5nIiwiYWRkQ29tbWVudERvbmUiLCJhZGRDb21tZW50RXJyb3IiLCJBRERfUE9TVF9SRVFVRVNUIiwiQUREX1BPU1RfU1VDQ0VTUyIsIkFERF9QT1NUX0ZBSUxVUkUiLCJBRERfQ09NTUVOVF9SRVFVRVNUIiwiQUREX0NPTU1FTlRfU1VDQ0VTUyIsIkFERF9DT01NRU5UX0ZBSUxVUkUiLCJhZGRQb3N0UmVxdWVzdEFjdGlvbiIsImRhdGEiLCJ0eXBlIiwiYWRkQ29tbWVudFJlcXVlc3RBY3Rpb24iLCJkdW1teVBvc3QiLCJkdW1teUNvbW1lbnQiLCJyZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJlcnJvciIsInBvc3RJbmRleCIsImZpbmRJbmRleCIsInYiLCJwb3N0SWQiLCJwb3N0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./reducers/post.js\n"));

/***/ })

});