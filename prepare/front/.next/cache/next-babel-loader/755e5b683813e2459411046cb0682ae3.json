{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  loadMyInfoLoading: false,\n  loadMyInfoError: null,\n  loadMyInfoDone: false,\n  loadUserLoading: false,\n  loadUserError: null,\n  loadUserDone: false,\n  followLoading: false,\n  followError: null,\n  follownDone: false,\n  unfollowLoading: false,\n  unfollowError: null,\n  unfollownDone: false,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  // 로그인 상태\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpFailure: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false,\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  me: null\n};\n\n// 자주 사용되는 변수들 상수화\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\n// action creater > 동적으로 액션 만들어줌\n// export 해줌\nexport const loginRequestAction = data => ({\n  // type은 reducer로 전달되는 key같은 개념 함수에 대한 설명\n  type: LOG_IN_REQUEST,\n  data\n});\n// export 해줌\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_USER_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n    case LOAD_USER_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.me = action.data;\n      draft.loadUserDone = true;\n      break;\n    case LOAD_USER_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      draft.followDone = true;\n      break;\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      draft.unfollowDone = true;\n      break;\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n    // return {\n    //   // // 참조 관계 때문에 객체 생성\n    //   // ...state,\n    //   // // 바꾸고자 하는게 객체 안에 있으면 객체 바깥은 ...state로 정리\n    //   // // 그리고 객체 안에서도 바꾸고자 하는 내용만 정의해주고, 나머지는 ...state\n    //   // user: {\n    //   ...state,\n    //   logInLoading: true,\n    //   logInError: null,\n    //   logInDone: false,\n    // };\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      break;\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      draft.me = null;\n      break;\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameDone = true;\n      break;\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      // ...state,\n      // me: {\n      //   ...state.me,\n      //   Posts: [{ id: action.data }, ...state.me.Posts],\n      // },\n      break;\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts.filter(v => v.id !== action.data);\n      // ...state,\n      // me: {\n      //   ...state.me,\n      //   Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      // },\n      break;\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerError = null;\n      draft.removeFollowerDone = false;\n      break;\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n      draft.removeFollowerDone = true;\n      break;\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["produce","initialState","loadMyInfoLoading","loadMyInfoError","loadMyInfoDone","loadUserLoading","loadUserError","loadUserDone","followLoading","followError","follownDone","unfollowLoading","unfollowError","unfollownDone","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpFailure","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","me","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","error","Followings","Followers","followDone","push","id","UserId","unfollowDone","filter","v","signUpError","nickname","Posts","unshift","removeFollowerLoading","removeFollowerError","removeFollowerDone"],"sources":["C:/Users/LG/Desktop/GitHub/FRONT-END/Redux-study/prepare/front/reducers/user.js"],"sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  loadMyInfoLoading: false,\r\n  loadMyInfoError: null,\r\n  loadMyInfoDone: false,\r\n  loadUserLoading: false,\r\n  loadUserError: null,\r\n  loadUserDone: false,\r\n  followLoading: false,\r\n  followError: null,\r\n  follownDone: false,\r\n  unfollowLoading: false,\r\n  unfollowError: null,\r\n  unfollownDone: false,\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false, // 로그인 상태\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false,\r\n  signUpFailure: null,\r\n  changeNicknameLoading: false, // 닉네임 변경 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  loadFollowingsLoading: false,\r\n  loadFollowingsDone: false,\r\n  loadFollowingsError: null,\r\n  loadFollowersLoading: false,\r\n  loadFollowersDone: false,\r\n  loadFollowersError: null,\r\n  me: null,\r\n};\r\n\r\n// 자주 사용되는 변수들 상수화\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\n// action creater > 동적으로 액션 만들어줌\r\n// export 해줌\r\nexport const loginRequestAction = (data) => ({\r\n  // type은 reducer로 전달되는 key같은 개념 함수에 대한 설명\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n// export 해줌\r\nexport const logoutRequestAction = () => ({\r\n  type: LOG_OUT_REQUEST,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOAD_USER_REQUEST:\r\n      draft.loadUserLoading = true;\r\n      draft.loadUserError = null;\r\n      draft.loadUserDone = false;\r\n      break;\r\n    case LOAD_USER_SUCCESS:\r\n      draft.loadUserLoading = false;\r\n      draft.me = action.data;\r\n      draft.loadUserDone = true;\r\n      break;\r\n    case LOAD_USER_FAILURE:\r\n      draft.loadUserLoading = false;\r\n      draft.loadUserError = action.error;\r\n      break;\r\n    case LOAD_FOLLOWINGS_REQUEST:\r\n      draft.loadFollowingsLoading = true;\r\n      draft.loadFollowingsError = null;\r\n      draft.loadFollowingsDone = false;\r\n      break;\r\n    case LOAD_FOLLOWINGS_SUCCESS:\r\n      draft.loadFollowingsLoading = false;\r\n      draft.me.Followings = action.data;\r\n      draft.loadFollowingsDone = true;\r\n      break;\r\n    case LOAD_FOLLOWINGS_FAILURE:\r\n      draft.loadFollowingsLoading = false;\r\n      draft.loadFollowingsError = action.error;\r\n      break;\r\n    case LOAD_FOLLOWERS_REQUEST:\r\n      draft.loadFollowersLoading = true;\r\n      draft.loadFollowersError = null;\r\n      draft.loadFollowersDone = false;\r\n      break;\r\n    case LOAD_FOLLOWERS_SUCCESS:\r\n      draft.loadFollowersLoading = false;\r\n      draft.me.Followers = action.data;\r\n      draft.loadFollowersDone = true;\r\n      break;\r\n    case LOAD_FOLLOWERS_FAILURE:\r\n      draft.loadFollowersLoading = false;\r\n      draft.loadFollowersError = action.error;\r\n      break;\r\n    case FOLLOW_REQUEST:\r\n      draft.followLoading = true;\r\n      draft.followError = null;\r\n      draft.followDone = false;\r\n      break;\r\n    case FOLLOW_SUCCESS:\r\n      draft.followLoading = false;\r\n      draft.me.Followings.push({ id: action.data.UserId });\r\n      draft.followDone = true;\r\n      break;\r\n    case FOLLOW_FAILURE:\r\n      draft.followLoading = false;\r\n      draft.followError = action.error;\r\n      break;\r\n    case UNFOLLOW_REQUEST:\r\n      draft.unfollowLoading = true;\r\n      draft.unfollowError = null;\r\n      draft.unfollowDone = false;\r\n      break;\r\n    case UNFOLLOW_SUCCESS:\r\n      draft.unfollowLoading = false;\r\n      draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n      draft.unfollowDone = true;\r\n      break;\r\n    case UNFOLLOW_FAILURE:\r\n      draft.unfollowLoading = false;\r\n      draft.unfollowError = action.error;\r\n      break;\r\n    case LOG_IN_REQUEST:\r\n      draft.logInLoading = true;\r\n      draft.logInError = null;\r\n      draft.logInDone = false;\r\n      break;\r\n      // return {\r\n      //   // // 참조 관계 때문에 객체 생성\r\n      //   // ...state,\r\n      //   // // 바꾸고자 하는게 객체 안에 있으면 객체 바깥은 ...state로 정리\r\n      //   // // 그리고 객체 안에서도 바꾸고자 하는 내용만 정의해주고, 나머지는 ...state\r\n      //   // user: {\r\n      //   ...state,\r\n      //   logInLoading: true,\r\n      //   logInError: null,\r\n      //   logInDone: false,\r\n      // };\r\n    case LOG_IN_SUCCESS:\r\n      draft.logInLoading = false;\r\n      draft.logInDone = true;\r\n      draft.me = action.data;\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.logInLoading = false;\r\n      draft.logInError = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      draft.logOutLoading = true;\r\n      draft.logOutError = null;\r\n      draft.logOutDone = false;\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      draft.logOutLoading = false;\r\n      draft.logOutDone = true;\r\n      draft.me = null;\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      draft.logOutLoading = false;\r\n      draft.logOutError = action.error;\r\n      break;\r\n    case SIGN_UP_REQUEST:\r\n      draft.signUpLoading = true;\r\n      draft.signUpDone = false;\r\n      draft.signUpError = null;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.signUpLoading = false;\r\n      draft.signUpDone = true;\r\n      draft.me = null;\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.signUpLoading = false;\r\n      draft.signUpError = action.error;\r\n      break;\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      draft.changeNicknameLoading = true;\r\n      draft.changeNicknameDone = false;\r\n      draft.changeNicknameError = null;\r\n      break;\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      draft.changeNicknameLoading = false;\r\n      draft.me.nickname = action.data.nickname;\r\n      draft.changeNicknameDone = true;\r\n      break;\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameError = action.error;\r\n      break;\r\n    case ADD_POST_TO_ME:\r\n      draft.me.Posts.unshift({ id: action.data });\r\n      // ...state,\r\n      // me: {\r\n      //   ...state.me,\r\n      //   Posts: [{ id: action.data }, ...state.me.Posts],\r\n      // },\r\n      break;\r\n    case REMOVE_POST_OF_ME:\r\n      draft.me.Posts.filter((v) => v.id !== action.data);\r\n      // ...state,\r\n      // me: {\r\n      //   ...state.me,\r\n      //   Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n      // },\r\n      break;\r\n    case REMOVE_FOLLOWER_REQUEST:\r\n      draft.removeFollowerLoading = true;\r\n      draft.removeFollowerError = null;\r\n      draft.removeFollowerDone = false;\r\n      break;\r\n    case REMOVE_FOLLOWER_SUCCESS:\r\n      draft.removeFollowerLoading = false;\r\n      draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n      draft.removeFollowerDone = true;\r\n      break;\r\n    case REMOVE_FOLLOWER_FAILURE:\r\n      draft.removeFollowerLoading = false;\r\n      draft.removeFollowerError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}