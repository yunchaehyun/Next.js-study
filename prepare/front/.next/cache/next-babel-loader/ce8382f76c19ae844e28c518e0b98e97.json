{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LG\\\\Desktop\\\\GitHub\\\\FRONT-END\\\\Redux-study\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n  _s = $RefreshSig$();\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  var router = useRouter();\n  var id = router.query.id;\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    singlePost = _useSelector.singlePost;\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n_c = Post;\n// 화면을 그리기 전에 실행됨\nexport var __N_SSP = true;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useRouter","React","useSelector","AppLayout","PostCard","Post","router","id","query","state","post","singlePost"],"sources":["C:/Users/LG/Desktop/GitHub/FRONT-END/Redux-study/prepare/front/pages/post/[id].js"],"sourcesContent":["import { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector } from 'react-redux';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\nfunction Post() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost } = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  // 쿠키가 공유되는 보안 문제를 막기 위해 굉장히 중요함\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  console.log(context.req.headers);\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    // const { id } = router.query; 에서 id에 접근할 수 있음\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  console.log('getServerSideProps end');\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n  // 화면을 그리기 전에 실행됨\r\n\r\nexport default Post;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,WAAW,QAAQ,aAAa;AAIzC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAAC;AAEjD,SAASC,IAAI,GAAG;EAAA;EACd,IAAMC,MAAM,GAAGN,SAAS,EAAE;EAC1B,IAAQO,EAAE,GAAKD,MAAM,CAACE,KAAK,CAAnBD,EAAE;EACV,mBAAuBL,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAjDC,UAAU,gBAAVA,UAAU;EAElB,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,QAAQ;MAAC,IAAI,EAAEA;IAAW;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACpB;AAEhB;AAAC,GAVQN,IAAI;EAAA,QACIL,SAAS,EAEDE,WAAW;AAAA;AAAA,KAH3BG,IAAI;AAiCX;AAAA;AAEF,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}