{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\LG\\\\Desktop\\\\GitHub\\\\FRONT-END\\\\Redux-study\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\n// 댓글 창\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  // 현재 접속한 유저\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone,\n    addCommentLoading = _useSelector.addCommentLoading;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentForm, \"TkQ1pkz5HHxeoLHkjeNQHPXXfhA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useEffect","Form","Input","Button","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["C:/Users/LG/Desktop/GitHub/FRONT-END/Redux-study/prepare/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n// 댓글 창\r\nfunction CommentForm({ post }) {\r\n  // 현재 접속한 유저\r\n  const dispatch = useDispatch();\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\r\n\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  }, [addCommentDone]);\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} />\r\n        <Button\r\n          style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={addCommentLoading}\r\n        >\r\n          작성\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,mBAAmB,QAAQ,kBAAkB;;AAEtD;AAAA;AACA,SAASC,WAAW,OAAW;EAAA;EAAA,IAARC,IAAI,QAAJA,IAAI;EACzB;EACA,IAAMC,QAAQ,GAAGN,WAAW,EAAE;EAE9B,IAAMO,EAAE,GAAGN,WAAW,CAAC,UAACO,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,mBAA8CN,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACH,IAAI;IAAA,EAAC;IAAxEM,cAAc,gBAAdA,cAAc;IAAEC,iBAAiB,gBAAjBA,iBAAiB;EAEzC,gBAA2DV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAhEW,WAAW;IAAEC,mBAAmB;IAAEC,cAAc;EACvDpB,SAAS,CAAC,YAAM;IACd,IAAIgB,cAAc,EAAE;MAClBI,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EACpB,IAAMK,eAAe,GAAGtB,WAAW,CAAC,YAAM;IACxCuB,OAAO,CAACC,GAAG,CAACb,IAAI,CAACE,EAAE,EAAEM,WAAW,CAAC;IACjCP,QAAQ,CAAC;MACPa,IAAI,EAAEhB,mBAAmB;MACzBiB,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAW;QAAES,MAAM,EAAEjB,IAAI,CAACE,EAAE;QAAEgB,MAAM,EAAEhB;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACM,WAAW,EAAEN,EAAE,CAAC,CAAC;EAErB,oBACE,QAAC,IAAI;IAAC,QAAQ,EAAES,eAAgB;IAAA,uBAC9B,QAAC,IAAI,CAAC,IAAI;MAAC,KAAK,EAAE;QAAEQ,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAA,wBACpD,QAAC,KAAK,CAAC,QAAQ;QAAC,KAAK,EAAEZ,WAAY;QAAC,QAAQ,EAAEC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAG,eACrE,QAAC,MAAM;QACL,KAAK,EAAE;UAAEU,QAAQ,EAAE,UAAU;UAAEE,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE,CAAC,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAE;QAClE,IAAI,EAAC,SAAS;QACd,QAAQ,EAAC,QAAQ;QACjB,OAAO,EAAEhB,iBAAkB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGpB;IAAA;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACP;AAEX;AAAC,GApCQR,WAAW;EAAA,QAEDJ,WAAW,EAEjBC,WAAW,EACwBA,WAAW,EAEEC,QAAQ;AAAA;AAAA,KAP5DE,WAAW;AAsCpBA,WAAW,CAACyB,SAAS,GAAG;EACtBxB,IAAI,EAAEN,SAAS,CAAC+B,MAAM,CAACC;AACzB,CAAC;AAED,eAAe3B,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}