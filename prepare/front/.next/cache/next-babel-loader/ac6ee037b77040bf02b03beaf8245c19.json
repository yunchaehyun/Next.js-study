{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LG\\\\Desktop\\\\GitHub\\\\FRONT-END\\\\Redux-study\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { useSelector } from 'react-redux';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  // 쿠키가 공유되는 보안 문제를 막기 위해 굉장히 중요함\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  console.log(context.req.headers);\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    // const { id } = router.query; 에서 id에 접근할 수 있음\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\n// 화면을 그리기 전에 실행됨\n\nexport default Post;","map":{"version":3,"names":["useRouter","React","axios","END","useSelector","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","AppLayout","PostCard","Post","router","id","query","singlePost","state","post","getServerSideProps","context","cookie","req","headers","defaults","Cookie","console","log","store","dispatch","type","data","params","sagaTask","toPromise"],"sources":["C:/Users/LG/Desktop/GitHub/FRONT-END/Redux-study/prepare/front/pages/post/[id].js"],"sourcesContent":["import { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector } from 'react-redux';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\nfunction Post() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost } = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  // 쿠키가 공유되는 보안 문제를 막기 위해 굉장히 중요함\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  console.log(context.req.headers);\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    // const { id } = router.query; 에서 id에 접근할 수 있음\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  console.log('getServerSideProps end');\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n  // 화면을 그리기 전에 실행됨\r\n\r\nexport default Post;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,YAAY;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAAC;AAEjD,SAASC,IAAI,GAAG;EACd,MAAMC,MAAM,GAAGX,SAAS,EAAE;EAC1B,MAAM;IAAEY;EAAG,CAAC,GAAGD,MAAM,CAACE,KAAK;EAC3B,MAAM;IAAEC;EAAW,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEzD,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,QAAQ;MAAC,IAAI,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACpB;AAEhB;AAEA,OAAO,MAAMG,kBAAkB,GAAGV,OAAO,CAACU,kBAAkB,CAAC,MAAOC,OAAO,IAAK;EAC9E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACC,OAAO,CAACF,MAAM,GAAG,EAAE;EAC5DjB,KAAK,CAACoB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAG,EAAE;EAClC;EACA,IAAIL,OAAO,CAACE,GAAG,IAAID,MAAM,EAAE;IACzBjB,KAAK,CAACoB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGJ,MAAM;EACxC;EACAK,OAAO,CAACC,GAAG,CAACP,OAAO,CAACE,GAAG,CAACC,OAAO,CAAC;EAEhCH,OAAO,CAACQ,KAAK,CAACC,QAAQ,CAAC;IACrBC,IAAI,EAAEvB,iBAAiB;IACvB;IACAwB,IAAI,EAAEX,OAAO,CAACY,MAAM,CAAClB;EACvB,CAAC,CAAC;EACFM,OAAO,CAACQ,KAAK,CAACC,QAAQ,CAAC;IACrBC,IAAI,EAAEtB;EACR,CAAC,CAAC;EACFY,OAAO,CAACQ,KAAK,CAACC,QAAQ,CAACxB,GAAG,CAAC;EAC3BqB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,MAAMP,OAAO,CAACQ,KAAK,CAACK,QAAQ,CAACC,SAAS,EAAE;AAC1C,CAAC,CAAC;AACA;;AAEF,eAAetB,IAAI"},"metadata":{},"sourceType":"module"}