{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LG\\\\Desktop\\\\GitHub\\\\FRONT-END\\\\Redux-study\\\\prepare\\\\front\\\\pages\\\\user\\\\[id].js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  var _this = this;\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector.mainPosts,\n    hasMorePosts = _useSelector.hasMorePosts,\n    loadUserPostsLoading = _useSelector.loadUserPostsLoading;\n  var _useSelector2 = useSelector(function (state) {\n      return state.user;\n    }),\n    userInfo = _useSelector2.userInfo;\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadUserPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: \"https://nodebird.com/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/user/\".concat(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9??\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), userInfo.Followings]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), userInfo.Followers]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : null, mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"IFEddV1bah9PdNsUBoKgoqOI/qI=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n_c = User;\nexport var __N_SSP = true;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","Head","useRouter","LOAD_USER_POSTS_REQUEST","PostCard","AppLayout","User","dispatch","router","id","query","state","post","mainPosts","hasMorePosts","loadUserPostsLoading","user","userInfo","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map"],"sources":["C:/Users/LG/Desktop/GitHub/FRONT-END/Redux-study/prepare/front/pages/user/[id].js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nfunction User() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { mainPosts, hasMorePosts, loadUserPostsLoading } = useSelector(\r\n    (state) => state.post,\r\n  );\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (\r\n        window.pageYOffset + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadUserPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            lastId:\r\n              mainPosts[mainPosts.length - 1]\r\n              && mainPosts[mainPosts.length - 1].id,\r\n            data: id,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {userInfo && (\r\n        <Head>\r\n          <title>\r\n            {userInfo.nickname}\r\n            님의 글\r\n          </title>\r\n          <meta\r\n            name=\"description\"\r\n            content={`${userInfo.nickname}님의 게시글`}\r\n          />\r\n          <meta\r\n            property=\"og:title\"\r\n            content={`${userInfo.nickname}님의 게시글`}\r\n          />\r\n          <meta\r\n            property=\"og:description\"\r\n            content={`${userInfo.nickname}님의 게시글`}\r\n          />\r\n          <meta\r\n            property=\"og:image\"\r\n            content=\"https://nodebird.com/favicon.ico\"\r\n          />\r\n          <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n        </Head>\r\n      )}\r\n      {userInfo ? (\r\n        <Card\r\n          actions={[\r\n            <div key=\"twit\">\r\n              짹짹??\r\n              <br />\r\n              {userInfo.Posts}\r\n            </div>,\r\n            <div key=\"following\">\r\n              팔로잉\r\n              <br />\r\n              {userInfo.Followings}\r\n            </div>,\r\n            <div key=\"follower\">\r\n              팔로워\r\n              <br />\r\n              {userInfo.Followers}\r\n            </div>,\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n            title={userInfo.nickname}\r\n          />\r\n        </Card>\r\n      ) : null}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_USER_POSTS_REQUEST,\r\n      data: context.params.id,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n    console.log('getState', context.store.getState().post.mainPosts);\r\n    return { props: {} };\r\n  },\r\n);\r\n\r\nexport default User;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}